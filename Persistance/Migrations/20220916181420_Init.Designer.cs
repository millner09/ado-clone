// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220916181420_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthProviderId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("Domain.WorkItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkItemTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkItemTypeId");

                    b.ToTable("WorkItems");
                });

            modelBuilder.Entity("Domain.WorkItemState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkItemBaseState")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkItemTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkItemTypeId");

                    b.ToTable("WorkItemStates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1cf9a860-6815-46ce-b5a2-400711a5c508"),
                            Name = "New",
                            WorkItemBaseState = 0,
                            WorkItemTypeId = new Guid("cdb05cfd-d4ea-4931-adcd-5b57a65b9f33")
                        },
                        new
                        {
                            Id = new Guid("8c63c9ab-f57a-4395-b01b-429f72d7c39b"),
                            Name = "Active",
                            WorkItemBaseState = 1,
                            WorkItemTypeId = new Guid("cdb05cfd-d4ea-4931-adcd-5b57a65b9f33")
                        },
                        new
                        {
                            Id = new Guid("53eba1e9-91ec-4332-bade-b428420919d0"),
                            Name = "Resolved",
                            WorkItemBaseState = 1,
                            WorkItemTypeId = new Guid("cdb05cfd-d4ea-4931-adcd-5b57a65b9f33")
                        },
                        new
                        {
                            Id = new Guid("215c9008-5608-4c7d-a183-8bb8ccd179f6"),
                            Name = "Closed",
                            WorkItemBaseState = 2,
                            WorkItemTypeId = new Guid("cdb05cfd-d4ea-4931-adcd-5b57a65b9f33")
                        },
                        new
                        {
                            Id = new Guid("6d68864c-366d-4d60-95b1-f1a8c52bcfbb"),
                            Name = "Removed",
                            WorkItemBaseState = 3,
                            WorkItemTypeId = new Guid("cdb05cfd-d4ea-4931-adcd-5b57a65b9f33")
                        });
                });

            modelBuilder.Entity("Domain.WorkItemType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkItemTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cdb05cfd-d4ea-4931-adcd-5b57a65b9f33"),
                            Name = "User Story"
                        });
                });

            modelBuilder.Entity("Domain.WorkItem", b =>
                {
                    b.HasOne("Domain.WorkItemType", "WorkItemType")
                        .WithMany()
                        .HasForeignKey("WorkItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkItemType");
                });

            modelBuilder.Entity("Domain.WorkItemState", b =>
                {
                    b.HasOne("Domain.WorkItemType", "WorkItemType")
                        .WithMany("AvailableWorkItemStates")
                        .HasForeignKey("WorkItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkItemType");
                });

            modelBuilder.Entity("Domain.WorkItemType", b =>
                {
                    b.Navigation("AvailableWorkItemStates");
                });
#pragma warning restore 612, 618
        }
    }
}
